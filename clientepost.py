import requests

URL = "http://localhost:5000"

# Funci√≥n para autenticaci√≥n
def autenticar():
    usuario = input("Usuario: ")
    password = input("Contrase√±a: ")

    response = requests.post(f"{URL}/login", json={"usuario": usuario, "password": password})
    
    if response.status_code == 200:
        token = response.json().get("token")
        print("‚úÖ Autenticaci√≥n exitosa.")
        return token
    else:
        print("‚ùå Error de autenticaci√≥n:", response.json().get("error"))
        return None

# Funci√≥n para agregar un usuario
def agregar_usuario(token):
    if not token:
        print("‚ö†Ô∏è Debe autenticarse primero.")
        return

    id = int(input("Ingrese el ID del usuario: "))
    nombre = input("Ingrese el nombre del usuario: ")
    
    datos = {"id": id, "nombre": nombre}
    response = requests.post(f"{URL}/usuarios", json=datos, headers={"Authorization": f"Bearer {token}"})
    
    if response.status_code == 201:
        print("‚úÖ Usuario agregado:", response.json())
    else:
        print("‚ùå Error al agregar usuario:", response.json())

# Funci√≥n para eliminar un usuario por ID
def eliminar_usuario(token):
    if not token:
        print("‚ö†Ô∏è Debe autenticarse primero.")
        return

    id = int(input("Ingrese el ID del usuario a eliminar: "))
    response = requests.delete(f"{URL}/usuarios/{id}", headers={"Authorization": f"Bearer {token}"})
    
    if response.status_code == 200:
        print("‚úÖ Usuario eliminado:", response.json())
    else:
        print("‚ùå Error al eliminar usuario:", response.json())

# Funci√≥n para buscar un usuario por ID (no requiere autenticaci√≥n)
def buscar_usuario():
    id = int(input("Ingrese el ID del usuario a buscar: "))
    response = requests.get(f"{URL}/usuarios/{id}")
    
    if response.status_code == 200:
        print("‚úÖ Usuario encontrado:", response.json())
    else:
        print("‚ùå Usuario no encontrado.")

# Men√∫ interactivo
def menu():
    token = None  # Variable para almacenar el token de autenticaci√≥n

    # Forzar autenticaci√≥n antes de mostrar el men√∫
    while not token:
        print("\nüîê Debe iniciar sesi√≥n para continuar.")
        token = autenticar()
    
    while True:
        print("\n--- Men√∫ ---")
        print("1. Agregar usuario")
        print("2. Eliminar usuario")
        print("3. Buscar usuario por ID")
        print("4. Salir")
        
        opcion = input("Seleccione una opci√≥n: ")
        
        if opcion == "1":
            agregar_usuario(token)
        elif opcion == "2":
            eliminar_usuario(token)
        elif opcion == "3":
            buscar_usuario()
        elif opcion == "4":
            print("Saliendo del programa...")
            break
        else:
            print("‚ùå Opci√≥n inv√°lida, intente nuevamente.")

if __name__ == "__main__":
    menu()
